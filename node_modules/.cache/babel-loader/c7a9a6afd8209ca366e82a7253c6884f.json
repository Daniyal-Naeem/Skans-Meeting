{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useContext,useRef,useEffect}from'react';import CrudContext from\"../../context/crud/crudContext\";var ContactFilter=function ContactFilter(){var crudContext=useContext(CrudContext);var text=useRef('');var filterMeetings=crudContext.filterMeetings,clearFilter=crudContext.clearFilter,filtered=crudContext.filtered;useEffect(function(){if(filtered===null){text.current.value='';}});var onChange=function onChange(e){if(text.current.value!==''){filterMeetings(e.target.value);}else{clearFilter();}};return/*#__PURE__*/_jsx(\"form\",{children:/*#__PURE__*/_jsx(\"input\",{ref:text,type:\"text\",placeholder:\"Filter Meetings...\",onChange:onChange})});};export default ContactFilter;","map":{"version":3,"sources":["C:/Users/daniy/Documents/GitHub/livemeetingapp/liveapp/client/src/components/contacts/ContactFilter.js"],"names":["React","useContext","useRef","useEffect","CrudContext","ContactFilter","crudContext","text","filterMeetings","clearFilter","filtered","current","value","onChange","e","target"],"mappings":"2CAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,MAA5B,CAAoCC,SAApC,KAAqD,OAArD,CACA,MAAOC,CAAAA,WAAP,KAAwB,gCAAxB,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,GAAMC,CAAAA,WAAW,CAAGL,UAAU,CAACG,WAAD,CAA9B,CACA,GAAMG,CAAAA,IAAI,CAAGL,MAAM,CAAC,EAAD,CAAnB,CAF0B,GAIlBM,CAAAA,cAJkB,CAIwBF,WAJxB,CAIlBE,cAJkB,CAIFC,WAJE,CAIwBH,WAJxB,CAIFG,WAJE,CAIWC,QAJX,CAIwBJ,WAJxB,CAIWI,QAJX,CAM1BP,SAAS,CAAC,UAAM,CACd,GAAIO,QAAQ,GAAK,IAAjB,CAAuB,CACrBH,IAAI,CAACI,OAAL,CAAaC,KAAb,CAAqB,EAArB,CACD,CACF,CAJQ,CAAT,CAMA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,CAAC,CAAI,CACpB,GAAIP,IAAI,CAACI,OAAL,CAAaC,KAAb,GAAuB,EAA3B,CAA+B,CAC7BJ,cAAc,CAACM,CAAC,CAACC,MAAF,CAASH,KAAV,CAAd,CACD,CAFD,IAEO,CACLH,WAAW,GACZ,CACF,CAND,CAQA,mBACE,mCACE,cACE,GAAG,CAAEF,IADP,CAEE,IAAI,CAAC,MAFP,CAGE,WAAW,CAAC,oBAHd,CAIE,QAAQ,CAAEM,QAJZ,EADF,EADF,CAUD,CA9BD,CAgCA,cAAeR,CAAAA,aAAf","sourcesContent":["import React, { useContext, useRef, useEffect } from 'react';\r\nimport CrudContext from \"../../context/crud/crudContext\";\r\n\r\nconst ContactFilter = () => {\r\n  const crudContext = useContext(CrudContext);\r\n  const text = useRef('');\r\n\r\n  const { filterMeetings, clearFilter, filtered } = crudContext;\r\n\r\n  useEffect(() => {\r\n    if (filtered === null) {\r\n      text.current.value = '';\r\n    }\r\n  });\r\n\r\n  const onChange = e => {\r\n    if (text.current.value !== '') {\r\n      filterMeetings(e.target.value);\r\n    } else {\r\n      clearFilter();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <input\r\n        ref={text}\r\n        type='text'\r\n        placeholder='Filter Meetings...'\r\n        onChange={onChange}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactFilter;"]},"metadata":{},"sourceType":"module"}