{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\daniy\\\\Documents\\\\GitHub\\\\livemeetingapp\\\\liveapp\\\\client\\\\src\\\\context\\\\crud\\\\CrudState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport crudContext from './crudContext';\nimport crudReducer from './crudReducers';\nimport { GET_MEETINGS, ADD_MEETING, DELETE_MEETING, SET_CURRENT, CLEAR_CURRENT, UPDATE_MEETING, FILTER_MEETINGS, CLEAR_FILTER, MEETING_ERROR, CLEAR_MEETINGS } from '../types';\n\nconst CrudState = props => {\n  _s();\n\n  const initialState = {\n    meetings: [],\n    current: null,\n    filtered: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(crudReducer, initialState); // Get Meetings\n\n  const getMeetings = async () => {\n    try {\n      const res = await axios.get('/api/crud');\n      dispatch({\n        type: GET_MEETINGS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: MEETING_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Add Meeting\n\n\n  const addMeeting = async meeting => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/crud', meeting, config);\n      dispatch({\n        type: ADD_MEETING,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: MEETING_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Delete Meeting\n\n\n  const deleteMeeting = async id => {\n    try {\n      await axios.delete(`/api/crud/${id}`);\n      dispatch({\n        type: DELETE_MEETING,\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: MEETING_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Update Meeting\n\n\n  const updateMeeting = async meeting => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.put(`/api/crud/${meeting._id}`, meeting, config);\n      dispatch({\n        type: UPDATE_MEETING,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: MEETING_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Clear Meeting\n\n\n  const clearMeetings = () => {\n    dispatch({\n      type: CLEAR_MEETINGS\n    });\n  }; // Set Current Meeting\n\n\n  const setCurrent = meeting => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: meeting\n    });\n  }; // Clear Current Meeting\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // Filter Meeting\n\n\n  const filterMeeting = text => {\n    dispatch({\n      type: FILTER_MEETINGS,\n      payload: text\n    });\n  }; // Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(crudContext.Provider, {\n    value: {\n      meetings: state.meetings,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      addMeeting,\n      deleteMeeting,\n      setCurrent,\n      clearCurrent,\n      updateMeeting,\n      filterMeeting,\n      clearFilter,\n      getMeetings,\n      clearMeetings\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CrudState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = CrudState;\nexport default CrudState;\n\nvar _c;\n\n$RefreshReg$(_c, \"CrudState\");","map":{"version":3,"sources":["C:/Users/daniy/Documents/GitHub/livemeetingapp/liveapp/client/src/context/crud/CrudState.js"],"names":["React","useReducer","axios","crudContext","crudReducer","GET_MEETINGS","ADD_MEETING","DELETE_MEETING","SET_CURRENT","CLEAR_CURRENT","UPDATE_MEETING","FILTER_MEETINGS","CLEAR_FILTER","MEETING_ERROR","CLEAR_MEETINGS","CrudState","props","initialState","meetings","current","filtered","error","state","dispatch","getMeetings","res","get","type","payload","data","err","response","msg","addMeeting","meeting","config","headers","post","deleteMeeting","id","delete","updateMeeting","put","_id","clearMeetings","setCurrent","clearCurrent","filterMeeting","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport crudContext from './crudContext';\r\nimport crudReducer from './crudReducers';\r\n \r\nimport {\r\n    GET_MEETINGS,\r\n    ADD_MEETING,\r\n    DELETE_MEETING,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT,\r\n    UPDATE_MEETING, \r\n    FILTER_MEETINGS,\r\n    CLEAR_FILTER,\r\n    MEETING_ERROR,\r\n    CLEAR_MEETINGS\r\n} from '../types';\r\n\r\nconst CrudState = props => {\r\n  const initialState = {\r\n    meetings: [],\r\n    current: null,\r\n    filtered: null,\r\n    error: null\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(crudReducer, initialState);\r\n\r\n  // Get Meetings\r\n  const getMeetings = async () => {\r\n    try {\r\n      const res = await axios.get('/api/crud');\r\n\r\n      dispatch({\r\n        type: GET_MEETINGS,\r\n        payload: res.data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: MEETING_ERROR,\r\n        payload: err.response.msg\r\n      });\r\n    }\r\n  };\r\n\r\n  // Add Meeting\r\n  const addMeeting = async meeting => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post('/api/crud', meeting, config);\r\n\r\n      dispatch({\r\n        type: ADD_MEETING,\r\n        payload: res.data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: MEETING_ERROR,\r\n        payload: err.response.msg\r\n      });\r\n    }\r\n  };\r\n\r\n  // Delete Meeting\r\n  const deleteMeeting = async id => {\r\n    try {\r\n      await axios.delete(`/api/crud/${id}`);\r\n\r\n      dispatch({\r\n        type: DELETE_MEETING,\r\n        payload: id\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: MEETING_ERROR,\r\n        payload: err.response.msg\r\n      });\r\n    }\r\n  };\r\n\r\n  // Update Meeting\r\n  const updateMeeting = async meeting => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    try {\r\n      const res = await axios.put(\r\n        `/api/crud/${meeting._id}`,\r\n        meeting,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: UPDATE_MEETING,\r\n        payload: res.data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: MEETING_ERROR,\r\n        payload: err.response.msg\r\n      });\r\n    }\r\n  };\r\n\r\n  // Clear Meeting\r\n  const clearMeetings = () => {\r\n    dispatch({ type: CLEAR_MEETINGS });\r\n  };\r\n\r\n  // Set Current Meeting\r\n  const setCurrent = meeting => {\r\n    dispatch({ type: SET_CURRENT, payload: meeting });\r\n  };\r\n\r\n  // Clear Current Meeting\r\n  const clearCurrent = () => {\r\n    dispatch({ type: CLEAR_CURRENT });\r\n  };\r\n\r\n  // Filter Meeting\r\n  const filterMeeting = text => {\r\n    dispatch({ type: FILTER_MEETINGS, payload: text });\r\n  };\r\n\r\n  // Clear Filter\r\n  const clearFilter = () => {\r\n    dispatch({ type: CLEAR_FILTER });\r\n  };\r\n\r\n  return (\r\n    <crudContext.Provider\r\n      value={{\r\n        meetings: state.meetings,\r\n        current: state.current,\r\n        filtered: state.filtered,\r\n        error: state.error,\r\n        addMeeting,\r\n        deleteMeeting,\r\n        setCurrent,\r\n        clearCurrent,\r\n        updateMeeting,\r\n        filterMeeting,\r\n        clearFilter,\r\n        getMeetings,\r\n        clearMeetings\r\n      }}\r\n    >\r\n      {props.children}\r\n    </crudContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CrudState;"]},"metadata":{},"sourceType":"module"}