{"ast":null,"code":"import _toConsumableArray from\"C:/Users/daniy/Documents/GitHub/livemeetingapp/liveapp/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:/Users/daniy/Documents/GitHub/livemeetingapp/liveapp/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{GET_MEETINGS,ADD_MEETING,DELETE_MEETING,SET_CURRENT,CLEAR_CURRENT,UPDATE_MEETING,FILTER_MEETINGS,CLEAR_FILTER,MEETING_ERROR,CLEAR_MEETINGS}from'../types';// eslint-disable-next-line\nexport default(function(state,action){switch(action.type){case GET_MEETINGS:return _objectSpread(_objectSpread({},state),{},{meetings:action.payload,loading:false});case ADD_MEETING:return _objectSpread(_objectSpread({},state),{},{meetings:[action.payload].concat(_toConsumableArray(state.meetings)),loading:false});case UPDATE_MEETING:return _objectSpread(_objectSpread({},state),{},{meetings:state.meetings.map(function(meeting){return meeting._id===action.payload._id?action.payload:meeting;}),loading:false});case DELETE_MEETING:return _objectSpread(_objectSpread({},state),{},{meetings:state.meetings.filter(function(meeting){return meeting._id!==action.payload;}),loading:false});case CLEAR_MEETINGS:return _objectSpread(_objectSpread({},state),{},{meetings:null,filtered:null,error:null,current:null});case SET_CURRENT:return _objectSpread(_objectSpread({},state),{},{current:action.payload});case CLEAR_CURRENT:return _objectSpread(_objectSpread({},state),{},{current:null});case FILTER_MEETINGS:return _objectSpread(_objectSpread({},state),{},{filtered:state.meetings.filter(function(meeting){var regex=new RegExp(\"\".concat(action.payload),'gi');return meeting.classname.match(regex)||meeting.classid.match(regex);})});case CLEAR_FILTER:return _objectSpread(_objectSpread({},state),{},{filtered:null});case MEETING_ERROR:return _objectSpread(_objectSpread({},state),{},{error:action.payload});default:return state;}});","map":{"version":3,"sources":["C:/Users/daniy/Documents/GitHub/livemeetingapp/liveapp/client/src/context/crud/crudReducers.js"],"names":["GET_MEETINGS","ADD_MEETING","DELETE_MEETING","SET_CURRENT","CLEAR_CURRENT","UPDATE_MEETING","FILTER_MEETINGS","CLEAR_FILTER","MEETING_ERROR","CLEAR_MEETINGS","state","action","type","meetings","payload","loading","map","meeting","_id","filter","filtered","error","current","regex","RegExp","classname","match","classid"],"mappings":"uSAAA,OACIA,YADJ,CAEIC,WAFJ,CAGIC,cAHJ,CAIIC,WAJJ,CAKIC,aALJ,CAMIC,cANJ,CAOIC,eAPJ,CAQIC,YARJ,CASIC,aATJ,CAUIC,cAVJ,KAWS,UAXT,CAaE;AACA,eAAe,SAACC,KAAD,CAAQC,MAAR,CAAmB,CAChC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKZ,CAAAA,YAAL,CACE,sCACKU,KADL,MAEEG,QAAQ,CAAEF,MAAM,CAACG,OAFnB,CAGEC,OAAO,CAAE,KAHX,GAKF,IAAKd,CAAAA,WAAL,CACE,sCACKS,KADL,MAEEG,QAAQ,EAAGF,MAAM,CAACG,OAAV,4BAAsBJ,KAAK,CAACG,QAA5B,EAFV,CAGEE,OAAO,CAAE,KAHX,GAKF,IAAKV,CAAAA,cAAL,CACE,sCACKK,KADL,MAEEG,QAAQ,CAAEH,KAAK,CAACG,QAAN,CAAeG,GAAf,CAAmB,SAAAC,OAAO,QAClCA,CAAAA,OAAO,CAACC,GAAR,GAAgBP,MAAM,CAACG,OAAP,CAAeI,GAA/B,CAAqCP,MAAM,CAACG,OAA5C,CAAsDG,OADpB,EAA1B,CAFZ,CAKEF,OAAO,CAAE,KALX,GAOF,IAAKb,CAAAA,cAAL,CACE,sCACKQ,KADL,MAEEG,QAAQ,CAAEH,KAAK,CAACG,QAAN,CAAeM,MAAf,CACR,SAAAF,OAAO,QAAIA,CAAAA,OAAO,CAACC,GAAR,GAAgBP,MAAM,CAACG,OAA3B,EADC,CAFZ,CAKEC,OAAO,CAAE,KALX,GAOF,IAAKN,CAAAA,cAAL,CACE,sCACKC,KADL,MAEEG,QAAQ,CAAE,IAFZ,CAGEO,QAAQ,CAAE,IAHZ,CAIEC,KAAK,CAAE,IAJT,CAKEC,OAAO,CAAE,IALX,GAOF,IAAKnB,CAAAA,WAAL,CACE,sCACKO,KADL,MAEEY,OAAO,CAAEX,MAAM,CAACG,OAFlB,GAIF,IAAKV,CAAAA,aAAL,CACE,sCACKM,KADL,MAEEY,OAAO,CAAE,IAFX,GAIF,IAAKhB,CAAAA,eAAL,CACE,sCACKI,KADL,MAEEU,QAAQ,CAAEV,KAAK,CAACG,QAAN,CAAeM,MAAf,CAAsB,SAAAF,OAAO,CAAI,CACzC,GAAMM,CAAAA,KAAK,CAAG,GAAIC,CAAAA,MAAJ,WAAcb,MAAM,CAACG,OAArB,EAAgC,IAAhC,CAAd,CACA,MAAOG,CAAAA,OAAO,CAACQ,SAAR,CAAkBC,KAAlB,CAAwBH,KAAxB,GAAkCN,OAAO,CAACU,OAAR,CAAgBD,KAAhB,CAAsBH,KAAtB,CAAzC,CACD,CAHS,CAFZ,GAOF,IAAKhB,CAAAA,YAAL,CACE,sCACKG,KADL,MAEEU,QAAQ,CAAE,IAFZ,GAIF,IAAKZ,CAAAA,aAAL,CACE,sCACKE,KADL,MAEEW,KAAK,CAAEV,MAAM,CAACG,OAFhB,GAIF,QACE,MAAOJ,CAAAA,KAAP,CAlEJ,CAoED,CArED","sourcesContent":["import {\r\n    GET_MEETINGS,\r\n    ADD_MEETING,\r\n    DELETE_MEETING,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT,\r\n    UPDATE_MEETING,\r\n    FILTER_MEETINGS,\r\n    CLEAR_FILTER,\r\n    MEETING_ERROR,\r\n    CLEAR_MEETINGS\r\n  } from '../types';\r\n  \r\n  // eslint-disable-next-line\r\n  export default (state, action) => {\r\n    switch (action.type) {\r\n      case GET_MEETINGS:\r\n        return {\r\n          ...state,\r\n          meetings: action.payload,\r\n          loading: false\r\n        };\r\n      case ADD_MEETING:\r\n        return {\r\n          ...state,\r\n          meetings: [action.payload, ...state.meetings],\r\n          loading: false\r\n        };\r\n      case UPDATE_MEETING:\r\n        return {\r\n          ...state,\r\n          meetings: state.meetings.map(meeting =>\r\n            meeting._id === action.payload._id ? action.payload : meeting\r\n          ),\r\n          loading: false\r\n        };\r\n      case DELETE_MEETING:\r\n        return {\r\n          ...state,\r\n          meetings: state.meetings.filter(\r\n            meeting => meeting._id !== action.payload\r\n          ),\r\n          loading: false\r\n        };\r\n      case CLEAR_MEETINGS:\r\n        return {\r\n          ...state,\r\n          meetings: null,\r\n          filtered: null,\r\n          error: null,\r\n          current: null\r\n        };\r\n      case SET_CURRENT:\r\n        return {\r\n          ...state,\r\n          current: action.payload\r\n        };\r\n      case CLEAR_CURRENT:\r\n        return {\r\n          ...state,\r\n          current: null\r\n        };\r\n      case FILTER_MEETINGS:\r\n        return {\r\n          ...state,\r\n          filtered: state.meetings.filter(meeting => {\r\n            const regex = new RegExp(`${action.payload}`, 'gi');\r\n            return meeting.classname.match(regex) || meeting.classid.match(regex);\r\n          })\r\n        };\r\n      case CLEAR_FILTER:\r\n        return {\r\n          ...state,\r\n          filtered: null\r\n        };\r\n      case MEETING_ERROR:\r\n        return {\r\n          ...state,\r\n          error: action.payload\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };"]},"metadata":{},"sourceType":"module"}