{"ast":null,"code":"import { GET_MEETINGS, ADD_MEETING, DELETE_MEETING, SET_CURRENT, CLEAR_CURRENT, UPDATE_MEETING, FILTER_MEETINGS, CLEAR_FILTER, MEETING_ERROR, CLEAR_MEETINGS } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_MEETINGS:\n      return { ...state,\n        meetings: action.payload,\n        loading: false\n      };\n\n    case ADD_MEETING:\n      return { ...state,\n        meeting: [action.payload, ...state.MEETINGS],\n        loading: false\n      };\n\n    case UPDATE_MEETING:\n      return { ...state,\n        meeting: state.MEETINGS.map(meeting => meeting._id === action.payload._id ? action.payload : meeting),\n        loading: false\n      };\n\n    case DELETE_MEETING:\n      return { ...state,\n        meetings: state.meetings.filter(meeting => meeting._id !== action.payload),\n        loading: false\n      };\n\n    case CLEAR_MEETINGS:\n      return { ...state,\n        meeting: null,\n        filtered: null,\n        error: null,\n        current: null\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case FILTER_MEETINGS:\n      return { ...state,\n        filtered: state.MEETINGS.filter(meeting => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return meeting.name.match(regex) || meeting.email.match(regex);\n        })\n      };\n\n    case CLEAR_FILTER:\n      return { ...state,\n        filtered: null\n      };\n\n    case MEETING_ERROR:\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/daniy/Documents/GitHub/livemeetingapp/liveapp/client/src/context/crud/crudReducers.js"],"names":["GET_MEETINGS","ADD_MEETING","DELETE_MEETING","SET_CURRENT","CLEAR_CURRENT","UPDATE_MEETING","FILTER_MEETINGS","CLEAR_FILTER","MEETING_ERROR","CLEAR_MEETINGS","state","action","type","meetings","payload","loading","meeting","MEETINGS","map","_id","filter","filtered","error","current","regex","RegExp","name","match","email"],"mappings":"AAAA,SACIA,YADJ,EAEIC,WAFJ,EAGIC,cAHJ,EAIIC,WAJJ,EAKIC,aALJ,EAMIC,cANJ,EAOIC,eAPJ,EAQIC,YARJ,EASIC,aATJ,EAUIC,cAVJ,QAWS,UAXT;AAaE,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,YAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELG,QAAAA,QAAQ,EAAEF,MAAM,CAACG,OAFZ;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKd,WAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELM,QAAAA,OAAO,EAAE,CAACL,MAAM,CAACG,OAAR,EAAiB,GAAGJ,KAAK,CAACO,QAA1B,CAFJ;AAGLF,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKV,cAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELM,QAAAA,OAAO,EAAEN,KAAK,CAACO,QAAN,CAAeC,GAAf,CAAmBF,OAAO,IACjCA,OAAO,CAACG,GAAR,KAAgBR,MAAM,CAACG,OAAP,CAAeK,GAA/B,GAAqCR,MAAM,CAACG,OAA5C,GAAsDE,OAD/C,CAFJ;AAKLD,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAOF,SAAKb,cAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeO,MAAf,CACRJ,OAAO,IAAIA,OAAO,CAACG,GAAR,KAAgBR,MAAM,CAACG,OAD1B,CAFL;AAKLC,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAOF,SAAKN,cAAL;AACE,aAAO,EACL,GAAGC,KADE;AAELM,QAAAA,OAAO,EAAE,IAFJ;AAGLK,QAAAA,QAAQ,EAAE,IAHL;AAILC,QAAAA,KAAK,EAAE,IAJF;AAKLC,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAOF,SAAKpB,WAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELa,QAAAA,OAAO,EAAEZ,MAAM,CAACG;AAFX,OAAP;;AAIF,SAAKV,aAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELa,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKjB,eAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELW,QAAAA,QAAQ,EAAEX,KAAK,CAACO,QAAN,CAAeG,MAAf,CAAsBJ,OAAO,IAAI;AACzC,gBAAMQ,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEd,MAAM,CAACG,OAAQ,EAA7B,EAAgC,IAAhC,CAAd;AACA,iBAAOE,OAAO,CAACU,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BR,OAAO,CAACY,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC;AACD,SAHS;AAFL,OAAP;;AAOF,SAAKjB,YAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELW,QAAAA,QAAQ,EAAE;AAFL,OAAP;;AAIF,SAAKb,aAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELY,QAAAA,KAAK,EAAEX,MAAM,CAACG;AAFT,OAAP;;AAIF;AACE,aAAOJ,KAAP;AAlEJ;AAoED,CArED","sourcesContent":["import {\r\n    GET_MEETINGS,\r\n    ADD_MEETING,\r\n    DELETE_MEETING,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT,\r\n    UPDATE_MEETING,\r\n    FILTER_MEETINGS,\r\n    CLEAR_FILTER,\r\n    MEETING_ERROR,\r\n    CLEAR_MEETINGS\r\n  } from '../types';\r\n  \r\n  export default (state, action) => {\r\n    switch (action.type) {\r\n      case GET_MEETINGS:\r\n        return {\r\n          ...state,\r\n          meetings: action.payload,\r\n          loading: false\r\n        };\r\n      case ADD_MEETING:\r\n        return {\r\n          ...state,\r\n          meeting: [action.payload, ...state.MEETINGS],\r\n          loading: false\r\n        };\r\n      case UPDATE_MEETING:\r\n        return {\r\n          ...state,\r\n          meeting: state.MEETINGS.map(meeting =>\r\n            meeting._id === action.payload._id ? action.payload : meeting\r\n          ),\r\n          loading: false\r\n        };\r\n      case DELETE_MEETING:\r\n        return {\r\n          ...state,\r\n          meetings: state.meetings.filter(\r\n            meeting => meeting._id !== action.payload\r\n          ),\r\n          loading: false\r\n        };\r\n      case CLEAR_MEETINGS:\r\n        return {\r\n          ...state,\r\n          meeting: null,\r\n          filtered: null,\r\n          error: null,\r\n          current: null\r\n        };\r\n      case SET_CURRENT:\r\n        return {\r\n          ...state,\r\n          current: action.payload\r\n        };\r\n      case CLEAR_CURRENT:\r\n        return {\r\n          ...state,\r\n          current: null\r\n        };\r\n      case FILTER_MEETINGS:\r\n        return {\r\n          ...state,\r\n          filtered: state.MEETINGS.filter(meeting => {\r\n            const regex = new RegExp(`${action.payload}`, 'gi');\r\n            return meeting.name.match(regex) || meeting.email.match(regex);\r\n          })\r\n        };\r\n      case CLEAR_FILTER:\r\n        return {\r\n          ...state,\r\n          filtered: null\r\n        };\r\n      case MEETING_ERROR:\r\n        return {\r\n          ...state,\r\n          error: action.payload\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };"]},"metadata":{},"sourceType":"module"}